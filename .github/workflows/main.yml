# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# https://github.com/marketplace/actions/ftp-deploy
# https://docs.github.com/en/actions/deployment/about-deployments/deploying-with-github-actions
# https://github.com/marketplace/actions/simple-ftp-deploy
# https://github.com/marketplace/actions/ftp-deploy

name: Build and deploy ASP.Net Core app to FTP - MyMovie

on:
  push:
    branches:
      - main


  workflow_dispatch:

env:
  AZURE_WEBAPP_PACKAGE_PATH: './MyMovie' # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '3.1.x' # set this to the dotnet version to use
  
  # Includes GitHub secret (API key)
  Authentication:Twitter:ConsumerSecret: ${{ secrets.TWITTER_CONSUMERSECRET }} 
  Authentication:Twitter:ConsumerAPIKey: ${{ secrets.TWITTER_CONSUMERAPIKEY }}
  Authentication:Google:ClientSecret: ${{ secrets.GOOGLE_CLIENTSECRET }}
  Authentication:Google:ClientId: ${{ secrets.GOOGLE_CLIENTID }}
  SendGridKey: ${{ secrets.EMAIL_SENDGRIDKEY }}
  Authentication:Facebook:AppId: ${{ secrets.FACEBOOK_APPID }}
  Authentication:Facebook:AppSecret: ${{ secrets.FACEBOOK_APPSECRET }}

jobs:
  build-and-deploy:
    runs-on: windows-latest
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v2

      - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: 'Resolve Project Dependencies Using Dotnet'
        shell: pwsh
        run: |
          pushd './${{ env.AZURE_WEBAPP_PACKAGE_PATH }}'
          dotnet build --configuration Release --output ./output
          dotnet publish -c Release -r win-x86 --self-contained true
          popd
          
      - name: Deploy
      
      - name: Upload ftp
        uses: sebastianpopp/ftp-action@releases/v2
        with:
          host: ${{ secrets.FTP_HOST }}
          user: ${{ secrets.FTP_USER }}
          password: ${{ secrets.FTP_PW }}
          localDir: "./output"
          remoteDir: ${{ secrets.FTP_DIR }} 
          options: "--delete --asci"  
